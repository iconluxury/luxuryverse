/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as LayoutTermsImport } from './routes/_layout/terms'
import { Route as LayoutProductImport } from './routes/_layout/product'
import { Route as LayoutPrivacyRequestImport } from './routes/_layout/privacy-request'
import { Route as LayoutPrivacyImport } from './routes/_layout/privacy'
import { Route as LayoutJoinImport } from './routes/_layout/join'
import { Route as LayoutDoNotSellImport } from './routes/_layout/do-not-sell'
import { Route as LayoutDemoRequestImport } from './routes/_layout/demo-request'
import { Route as LayoutCookieImport } from './routes/_layout/cookie'
import { Route as LayoutCollectionsImport } from './routes/_layout/collections'
import { Route as LayoutAuthCompleteImport } from './routes/_layout/auth-complete'
import { Route as LayoutResourcesBlogImport } from './routes/_layout/resources/blog'
import { Route as LayoutProductsProductDetailsImport } from './routes/_layout/products/ProductDetails'
import { Route as LayoutCollectionsCollectionDetailsImport } from './routes/_layout/collections/CollectionDetails'
import { Route as LayoutResourcesBlogsPathImport } from './routes/_layout/resources/blogs/$path'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTermsRoute = LayoutTermsImport.update({
  id: '/terms',
  path: '/terms',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProductRoute = LayoutProductImport.update({
  id: '/product',
  path: '/product',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPrivacyRequestRoute = LayoutPrivacyRequestImport.update({
  id: '/privacy-request',
  path: '/privacy-request',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPrivacyRoute = LayoutPrivacyImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutJoinRoute = LayoutJoinImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDoNotSellRoute = LayoutDoNotSellImport.update({
  id: '/do-not-sell',
  path: '/do-not-sell',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutDemoRequestRoute = LayoutDemoRequestImport.update({
  id: '/demo-request',
  path: '/demo-request',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCookieRoute = LayoutCookieImport.update({
  id: '/cookie',
  path: '/cookie',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutCollectionsRoute = LayoutCollectionsImport.update({
  id: '/collections',
  path: '/collections',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutAuthCompleteRoute = LayoutAuthCompleteImport.update({
  id: '/auth-complete',
  path: '/auth-complete',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutResourcesBlogRoute = LayoutResourcesBlogImport.update({
  id: '/resources/blog',
  path: '/resources/blog',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutProductsProductDetailsRoute =
  LayoutProductsProductDetailsImport.update({
    id: '/products/ProductDetails',
    path: '/products/ProductDetails',
    getParentRoute: () => LayoutRoute,
  } as any)

const LayoutCollectionsCollectionDetailsRoute =
  LayoutCollectionsCollectionDetailsImport.update({
    id: '/CollectionDetails',
    path: '/CollectionDetails',
    getParentRoute: () => LayoutCollectionsRoute,
  } as any)

const LayoutResourcesBlogsPathRoute = LayoutResourcesBlogsPathImport.update({
  id: '/resources/blogs/$path',
  path: '/resources/blogs/$path',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/auth-complete': {
      id: '/_layout/auth-complete'
      path: '/auth-complete'
      fullPath: '/auth-complete'
      preLoaderRoute: typeof LayoutAuthCompleteImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/collections': {
      id: '/_layout/collections'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof LayoutCollectionsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/cookie': {
      id: '/_layout/cookie'
      path: '/cookie'
      fullPath: '/cookie'
      preLoaderRoute: typeof LayoutCookieImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/demo-request': {
      id: '/_layout/demo-request'
      path: '/demo-request'
      fullPath: '/demo-request'
      preLoaderRoute: typeof LayoutDemoRequestImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/do-not-sell': {
      id: '/_layout/do-not-sell'
      path: '/do-not-sell'
      fullPath: '/do-not-sell'
      preLoaderRoute: typeof LayoutDoNotSellImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/join': {
      id: '/_layout/join'
      path: '/join'
      fullPath: '/join'
      preLoaderRoute: typeof LayoutJoinImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/privacy': {
      id: '/_layout/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof LayoutPrivacyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/privacy-request': {
      id: '/_layout/privacy-request'
      path: '/privacy-request'
      fullPath: '/privacy-request'
      preLoaderRoute: typeof LayoutPrivacyRequestImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/product': {
      id: '/_layout/product'
      path: '/product'
      fullPath: '/product'
      preLoaderRoute: typeof LayoutProductImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/terms': {
      id: '/_layout/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof LayoutTermsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/collections/CollectionDetails': {
      id: '/_layout/collections/CollectionDetails'
      path: '/CollectionDetails'
      fullPath: '/collections/CollectionDetails'
      preLoaderRoute: typeof LayoutCollectionsCollectionDetailsImport
      parentRoute: typeof LayoutCollectionsImport
    }
    '/_layout/products/ProductDetails': {
      id: '/_layout/products/ProductDetails'
      path: '/products/ProductDetails'
      fullPath: '/products/ProductDetails'
      preLoaderRoute: typeof LayoutProductsProductDetailsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/resources/blog': {
      id: '/_layout/resources/blog'
      path: '/resources/blog'
      fullPath: '/resources/blog'
      preLoaderRoute: typeof LayoutResourcesBlogImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/resources/blogs/$path': {
      id: '/_layout/resources/blogs/$path'
      path: '/resources/blogs/$path'
      fullPath: '/resources/blogs/$path'
      preLoaderRoute: typeof LayoutResourcesBlogsPathImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutCollectionsRouteChildren {
  LayoutCollectionsCollectionDetailsRoute: typeof LayoutCollectionsCollectionDetailsRoute
}

const LayoutCollectionsRouteChildren: LayoutCollectionsRouteChildren = {
  LayoutCollectionsCollectionDetailsRoute:
    LayoutCollectionsCollectionDetailsRoute,
}

const LayoutCollectionsRouteWithChildren =
  LayoutCollectionsRoute._addFileChildren(LayoutCollectionsRouteChildren)

interface LayoutRouteChildren {
  LayoutAuthCompleteRoute: typeof LayoutAuthCompleteRoute
  LayoutCollectionsRoute: typeof LayoutCollectionsRouteWithChildren
  LayoutCookieRoute: typeof LayoutCookieRoute
  LayoutDemoRequestRoute: typeof LayoutDemoRequestRoute
  LayoutDoNotSellRoute: typeof LayoutDoNotSellRoute
  LayoutJoinRoute: typeof LayoutJoinRoute
  LayoutPrivacyRoute: typeof LayoutPrivacyRoute
  LayoutPrivacyRequestRoute: typeof LayoutPrivacyRequestRoute
  LayoutProductRoute: typeof LayoutProductRoute
  LayoutTermsRoute: typeof LayoutTermsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutProductsProductDetailsRoute: typeof LayoutProductsProductDetailsRoute
  LayoutResourcesBlogRoute: typeof LayoutResourcesBlogRoute
  LayoutResourcesBlogsPathRoute: typeof LayoutResourcesBlogsPathRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAuthCompleteRoute: LayoutAuthCompleteRoute,
  LayoutCollectionsRoute: LayoutCollectionsRouteWithChildren,
  LayoutCookieRoute: LayoutCookieRoute,
  LayoutDemoRequestRoute: LayoutDemoRequestRoute,
  LayoutDoNotSellRoute: LayoutDoNotSellRoute,
  LayoutJoinRoute: LayoutJoinRoute,
  LayoutPrivacyRoute: LayoutPrivacyRoute,
  LayoutPrivacyRequestRoute: LayoutPrivacyRequestRoute,
  LayoutProductRoute: LayoutProductRoute,
  LayoutTermsRoute: LayoutTermsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutProductsProductDetailsRoute: LayoutProductsProductDetailsRoute,
  LayoutResourcesBlogRoute: LayoutResourcesBlogRoute,
  LayoutResourcesBlogsPathRoute: LayoutResourcesBlogsPathRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/auth-complete': typeof LayoutAuthCompleteRoute
  '/collections': typeof LayoutCollectionsRouteWithChildren
  '/cookie': typeof LayoutCookieRoute
  '/demo-request': typeof LayoutDemoRequestRoute
  '/do-not-sell': typeof LayoutDoNotSellRoute
  '/join': typeof LayoutJoinRoute
  '/privacy': typeof LayoutPrivacyRoute
  '/privacy-request': typeof LayoutPrivacyRequestRoute
  '/product': typeof LayoutProductRoute
  '/terms': typeof LayoutTermsRoute
  '/': typeof LayoutIndexRoute
  '/collections/CollectionDetails': typeof LayoutCollectionsCollectionDetailsRoute
  '/products/ProductDetails': typeof LayoutProductsProductDetailsRoute
  '/resources/blog': typeof LayoutResourcesBlogRoute
  '/resources/blogs/$path': typeof LayoutResourcesBlogsPathRoute
}

export interface FileRoutesByTo {
  '/auth-complete': typeof LayoutAuthCompleteRoute
  '/collections': typeof LayoutCollectionsRouteWithChildren
  '/cookie': typeof LayoutCookieRoute
  '/demo-request': typeof LayoutDemoRequestRoute
  '/do-not-sell': typeof LayoutDoNotSellRoute
  '/join': typeof LayoutJoinRoute
  '/privacy': typeof LayoutPrivacyRoute
  '/privacy-request': typeof LayoutPrivacyRequestRoute
  '/product': typeof LayoutProductRoute
  '/terms': typeof LayoutTermsRoute
  '/': typeof LayoutIndexRoute
  '/collections/CollectionDetails': typeof LayoutCollectionsCollectionDetailsRoute
  '/products/ProductDetails': typeof LayoutProductsProductDetailsRoute
  '/resources/blog': typeof LayoutResourcesBlogRoute
  '/resources/blogs/$path': typeof LayoutResourcesBlogsPathRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/auth-complete': typeof LayoutAuthCompleteRoute
  '/_layout/collections': typeof LayoutCollectionsRouteWithChildren
  '/_layout/cookie': typeof LayoutCookieRoute
  '/_layout/demo-request': typeof LayoutDemoRequestRoute
  '/_layout/do-not-sell': typeof LayoutDoNotSellRoute
  '/_layout/join': typeof LayoutJoinRoute
  '/_layout/privacy': typeof LayoutPrivacyRoute
  '/_layout/privacy-request': typeof LayoutPrivacyRequestRoute
  '/_layout/product': typeof LayoutProductRoute
  '/_layout/terms': typeof LayoutTermsRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/collections/CollectionDetails': typeof LayoutCollectionsCollectionDetailsRoute
  '/_layout/products/ProductDetails': typeof LayoutProductsProductDetailsRoute
  '/_layout/resources/blog': typeof LayoutResourcesBlogRoute
  '/_layout/resources/blogs/$path': typeof LayoutResourcesBlogsPathRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth-complete'
    | '/collections'
    | '/cookie'
    | '/demo-request'
    | '/do-not-sell'
    | '/join'
    | '/privacy'
    | '/privacy-request'
    | '/product'
    | '/terms'
    | '/'
    | '/collections/CollectionDetails'
    | '/products/ProductDetails'
    | '/resources/blog'
    | '/resources/blogs/$path'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth-complete'
    | '/collections'
    | '/cookie'
    | '/demo-request'
    | '/do-not-sell'
    | '/join'
    | '/privacy'
    | '/privacy-request'
    | '/product'
    | '/terms'
    | '/'
    | '/collections/CollectionDetails'
    | '/products/ProductDetails'
    | '/resources/blog'
    | '/resources/blogs/$path'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/auth-complete'
    | '/_layout/collections'
    | '/_layout/cookie'
    | '/_layout/demo-request'
    | '/_layout/do-not-sell'
    | '/_layout/join'
    | '/_layout/privacy'
    | '/_layout/privacy-request'
    | '/_layout/product'
    | '/_layout/terms'
    | '/_layout/'
    | '/_layout/collections/CollectionDetails'
    | '/_layout/products/ProductDetails'
    | '/_layout/resources/blog'
    | '/_layout/resources/blogs/$path'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/auth-complete",
        "/_layout/collections",
        "/_layout/cookie",
        "/_layout/demo-request",
        "/_layout/do-not-sell",
        "/_layout/join",
        "/_layout/privacy",
        "/_layout/privacy-request",
        "/_layout/product",
        "/_layout/terms",
        "/_layout/",
        "/_layout/products/ProductDetails",
        "/_layout/resources/blog",
        "/_layout/resources/blogs/$path"
      ]
    },
    "/_layout/auth-complete": {
      "filePath": "_layout/auth-complete.tsx",
      "parent": "/_layout"
    },
    "/_layout/collections": {
      "filePath": "_layout/collections.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/collections/CollectionDetails"
      ]
    },
    "/_layout/cookie": {
      "filePath": "_layout/cookie.tsx",
      "parent": "/_layout"
    },
    "/_layout/demo-request": {
      "filePath": "_layout/demo-request.tsx",
      "parent": "/_layout"
    },
    "/_layout/do-not-sell": {
      "filePath": "_layout/do-not-sell.tsx",
      "parent": "/_layout"
    },
    "/_layout/join": {
      "filePath": "_layout/join.tsx",
      "parent": "/_layout"
    },
    "/_layout/privacy": {
      "filePath": "_layout/privacy.tsx",
      "parent": "/_layout"
    },
    "/_layout/privacy-request": {
      "filePath": "_layout/privacy-request.tsx",
      "parent": "/_layout"
    },
    "/_layout/product": {
      "filePath": "_layout/product.tsx",
      "parent": "/_layout"
    },
    "/_layout/terms": {
      "filePath": "_layout/terms.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/collections/CollectionDetails": {
      "filePath": "_layout/collections/CollectionDetails.tsx",
      "parent": "/_layout/collections"
    },
    "/_layout/products/ProductDetails": {
      "filePath": "_layout/products/ProductDetails.tsx",
      "parent": "/_layout"
    },
    "/_layout/resources/blog": {
      "filePath": "_layout/resources/blog.tsx",
      "parent": "/_layout"
    },
    "/_layout/resources/blogs/$path": {
      "filePath": "_layout/resources/blogs/$path.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
